import React, { useState } from 'react';
import './App.css';

function App() {
  const [jsonInput, setJsonInput] = useState('');
  const [responseData, setResponseData] = useState(null);
  const [selectedOptions, setSelectedOptions] = useState([]);

  const handleJsonChange = (e) => {
    setJsonInput(e.target.value);
  };

  const handleOptionChange = (e) => {
    const { value, checked } = e.target;
    setSelectedOptions((prev) =>
      checked ? [...prev, value] : prev.filter((opt) => opt !== value)
    );
  };

  const handleSubmit = async () => {
    console.log('Button Clicked');
    try {
      const response = await fetch('http://localhost:3000/bfhl', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: jsonInput,
      });
      const data = await response.json();
      setResponseData(data);
    } catch (error) {
      console.error('Error:', error);
    }
  };

  return (
    <div className="App">
      <h1>BFHL Frontend</h1>
      <textarea
        rows="6"
        cols="50"
        placeholder='Enter JSON, e.g. { "data": ["A", "B", "1"] }'
        value={jsonInput}
        onChange={handleJsonChange}
      />
      <br />
      <button onClick={handleSubmit}>Submit</button>

      {responseData && (
        <div>
          <h2>Response:</h2>
          <div>
            <label>
              <input
                type="checkbox"
                value="numbers"
                onChange={handleOptionChange}
              />
              Numbers
            </label>
            <label>
              <input
                type="checkbox"
                value="alphabets"
                onChange={handleOptionChange}
              />
              Alphabets
            </label>
            <label>
              <input
                type="checkbox"
                value="highest_lowercase_alphabet"
                onChange={handleOptionChange}
              />
              Highest Lowercase Alphabet
            </label>
          </div>
          <div>
            {selectedOptions.includes('numbers') && (
              <div>
                <h3>Numbers:</h3>
                <p>{responseData.numbers.join(', ')}</p>
              </div>
            )}
            {selectedOptions.includes('alphabets') && (
              <div>
                <h3>Alphabets:</h3>
                <p>{responseData.alphabets.join(', ')}</p>
              </div>
            )}
            {selectedOptions.includes('highest_lowercase_alphabet') && (
              <div>
                <h3>Highest Lowercase Alphabet:</h3>
                <p>{responseData.highest_lowercase_alphabet.join(', ')}</p>
              </div>
            )}
          </div>
        </div>
      )}
    </div>
  );
}

export default App;
